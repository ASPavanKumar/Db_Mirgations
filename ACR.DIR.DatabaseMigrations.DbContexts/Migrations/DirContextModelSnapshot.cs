// <auto-generated />
using System;
using ACR.DIR.DatabaseMigrations.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ACR.DIR.DatabaseMigrations.DbContexts.Migrations
{
    [DbContext(typeof(DirContext))]
    partial class DirContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ACR.DIR.DatabaseMigrations.DbContexts.Models.DcmObject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Attributes")
                        .HasColumnType("JSON")
                        .HasColumnName("attributes");

                    b.Property<long?>("CbsObjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("cbsObjectId");

                    b.Property<DateTime?>("CreatedDateUtc")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createdDateUtc");

                    b.Property<long?>("DcmSeriesId")
                        .HasColumnType("bigint")
                        .HasColumnName("dcmSeriesId");

                    b.Property<long?>("DirTransactionId")
                        .HasColumnType("bigint")
                        .HasColumnName("dirTransactionId");

                    b.Property<int?>("InstanceNumber")
                        .HasColumnType("int")
                        .HasColumnName("instanceNumber");

                    b.Property<DateTime?>("LastModifiedDateUtc")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("lastModifiedDateUtc");

                    b.Property<long>("ObjectStatus")
                        .HasColumnType("bigint")
                        .HasColumnName("objectStatus");

                    b.Property<string>("ObjectStatusLogs")
                        .HasColumnType("longtext")
                        .HasColumnName("objectStatusLogs");

                    b.Property<int>("ReprocessAttemptCount")
                        .HasColumnType("int")
                        .HasColumnName("reprocessAttemptCount");

                    b.Property<long?>("ReprocessAttemptId")
                        .HasColumnType("bigint")
                        .HasColumnName("reprocessAttemptId");

                    b.Property<string>("S3Path")
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)")
                        .HasColumnName("s3Path");

                    b.Property<long?>("SizeBytes")
                        .HasColumnType("bigint")
                        .HasColumnName("sizeBytes");

                    b.Property<string>("SopClassUid")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sopClassUid");

                    b.Property<string>("SopInstanceUid")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sopInstanceUid");

                    b.HasKey("Id");

                    b.HasIndex("DcmSeriesId")
                        .HasDatabaseName("fk_dcmObjects_dcmSeriesId_idx");

                    b.HasIndex("DirTransactionId")
                        .HasDatabaseName("fk_dcmObjects_dirTransactionId_idx");

                    b.HasIndex("ReprocessAttemptId")
                        .HasDatabaseName("fk_dcmObjects_reprocessAttemptId_idx");

                    b.HasIndex(new[] { "CbsObjectId" }, "dcmObject_cbsObjectId_idx")
                        .IsUnique();

                    b.HasIndex(new[] { "CreatedDateUtc" }, "dcmObject_createdDateUtc_idx");

                    b.ToTable("dcmObjects");
                });

            modelBuilder.Entity("ACR.DIR.DatabaseMigrations.DbContexts.Models.DcmSeries", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedDateUtc")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createdDateUtc");

                    b.Property<string>("Date")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("date");

                    b.Property<long?>("DcmStudyId")
                        .HasColumnType("bigint")
                        .HasColumnName("dcmStudyId");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("LastModifiedDateUtc")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("lastModifiedDateUtc");

                    b.Property<string>("Modality")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("modality");

                    b.Property<string>("SeriesInstanceUid")
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("seriesInstanceUid");

                    b.Property<long?>("SeriesNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("seriesNumber");

                    b.HasKey("Id");

                    b.HasIndex("DcmStudyId")
                        .HasDatabaseName("fk_dcmSeries_dcmStudyId_idx");

                    b.HasIndex(new[] { "SeriesInstanceUid" }, "dcmSeries_seriesInstanceUid_idx");

                    b.ToTable("dcmSeries");
                });

            modelBuilder.Entity("ACR.DIR.DatabaseMigrations.DbContexts.Models.DcmStudy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AccessionNumber")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("accessionNumber");

                    b.Property<DateTime?>("CreatedDateUtc")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createdDateUTC");

                    b.Property<string>("Date")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("LastModifiedDateUtc")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("lastModifiedDateUtc");

                    b.Property<string>("PatientId")
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("patientId");

                    b.Property<string>("StudyId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("studyId");

                    b.Property<string>("StudyInstanceUid")
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("studyInstanceUid");

                    b.Property<string>("Time")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("time");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "StudyInstanceUid" }, "dcmStudies_studyInstanceUid_idx");

                    b.ToTable("dcmStudies");
                });

            modelBuilder.Entity("ACR.DIR.DatabaseMigrations.DbContexts.Models.DirTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AuthorizationStatus")
                        .HasColumnType("bigint")
                        .HasColumnName("authorizationStatus");

                    b.Property<string>("AuthorizationStatusLogs")
                        .HasColumnType("longtext")
                        .HasColumnName("authorizationStatusLogs");

                    b.Property<long?>("CbsTransactionId")
                        .HasColumnType("bigint")
                        .HasColumnName("cbsTransactionId");

                    b.Property<long>("CorporateId")
                        .HasColumnType("bigint")
                        .HasColumnName("corporateId");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createdDateUtc");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint")
                        .HasColumnName("facilityId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updatedDateUtc");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CbsTransactionId" }, "dirTransaction_cbsTransactionid_idx")
                        .IsUnique();

                    b.HasIndex(new[] { "CreatedDate" }, "dirTransaction_createdDateUtc_idx");

                    b.ToTable("dirTransaction");
                });

            modelBuilder.Entity("ACR.DIR.DatabaseMigrations.DbContexts.Models.ReprocessAttempts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ConfigPath")
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)")
                        .HasColumnName("configPath");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createdDate");

                    b.Property<long?>("ObjectCount")
                        .HasColumnType("bigint")
                        .HasColumnName("objectCount");

                    b.HasKey("Id");

                    b.ToTable("reprocessAttempts");
                });

            modelBuilder.Entity("ACR.DIR.DatabaseMigrations.DbContexts.Models.DcmObject", b =>
                {
                    b.HasOne("ACR.DIR.DatabaseMigrations.DbContexts.Models.DcmSeries", null)
                        .WithMany("DcmObjects")
                        .HasForeignKey("DcmSeriesId")
                        .HasConstraintName("fk_dcmObjects_dcmSeries_id");

                    b.HasOne("ACR.DIR.DatabaseMigrations.DbContexts.Models.DirTransaction", null)
                        .WithMany("DcmObjects")
                        .HasForeignKey("DirTransactionId")
                        .HasConstraintName("fk_dcmObjects_dirTransaction_id");

                    b.HasOne("Acr.CBS.DatabaseMigrations.DbContexts.Models.UseCase.Objects", null)
                        .WithMany("DcmObjects")
                        .HasForeignKey("CbsObjectId")
                        .HasConstraintName("fk_dcmObjects_object_id");

                    b.HasOne("ACR.DIR.DatabaseMigrations.DbContexts.Models.ReprocessAttempts", null)
                        .WithMany("DcmObjects")
                        .HasForeignKey("ReprocessAttemptId")
                        .HasConstraintName("fk_dcmObjects_reprocessAttempts_id");
                });

            modelBuilder.Entity("ACR.DIR.DatabaseMigrations.DbContexts.Models.DcmSeries", b =>
                {
                    b.HasOne("ACR.DIR.DatabaseMigrations.DbContexts.Models.DcmStudy", null)
                        .WithMany("DcmSeriesList")
                        .HasForeignKey("DcmStudyId")
                        .HasConstraintName("fk_dcmSeries_dcmStudies_id");
                });

            modelBuilder.Entity("ACR.DIR.DatabaseMigrations.DbContexts.Models.DcmSeries", b =>
                {
                    b.Navigation("DcmObjects");
                });

            modelBuilder.Entity("ACR.DIR.DatabaseMigrations.DbContexts.Models.DcmStudy", b =>
                {
                    b.Navigation("DcmSeriesList");
                });

            modelBuilder.Entity("ACR.DIR.DatabaseMigrations.DbContexts.Models.DirTransaction", b =>
                {
                    b.Navigation("DcmObjects");
                    b.HasOne("Acr.CBS.DatabaseMigrations.DbContexts.Models.UseCase.Transactions", null)
                        .WithMany("DirTransactions")
                        .HasForeignKey("CbsTransactionId")
                        .HasConstraintName("fk_dirTransaction_transaction_id");
                });

            modelBuilder.Entity("ACR.DIR.DatabaseMigrations.DbContexts.Models.ReprocessAttempts", b =>
                {
                    b.Navigation("DcmObjects");
                });
#pragma warning restore 612, 618
        }
    }
}
